// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`All links render when logged in and verified 1`] = `
<Navigation
  api={
    Object {
      "auth": Object {
        "currentUser": [MockFunction],
        "onAuthStateChanged": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
            Array [
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "signOut": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
    }
  }
  classes={[Function]}
>
  <div>
    <BrowserRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <div>
          <WithStyles(ForwardRef(Paper))>
            <ForwardRef(Paper)
              classes={
                Object {
                  "elevation0": "MuiPaper-elevation0",
                  "elevation1": "MuiPaper-elevation1",
                  "elevation10": "MuiPaper-elevation10",
                  "elevation11": "MuiPaper-elevation11",
                  "elevation12": "MuiPaper-elevation12",
                  "elevation13": "MuiPaper-elevation13",
                  "elevation14": "MuiPaper-elevation14",
                  "elevation15": "MuiPaper-elevation15",
                  "elevation16": "MuiPaper-elevation16",
                  "elevation17": "MuiPaper-elevation17",
                  "elevation18": "MuiPaper-elevation18",
                  "elevation19": "MuiPaper-elevation19",
                  "elevation2": "MuiPaper-elevation2",
                  "elevation20": "MuiPaper-elevation20",
                  "elevation21": "MuiPaper-elevation21",
                  "elevation22": "MuiPaper-elevation22",
                  "elevation23": "MuiPaper-elevation23",
                  "elevation24": "MuiPaper-elevation24",
                  "elevation3": "MuiPaper-elevation3",
                  "elevation4": "MuiPaper-elevation4",
                  "elevation5": "MuiPaper-elevation5",
                  "elevation6": "MuiPaper-elevation6",
                  "elevation7": "MuiPaper-elevation7",
                  "elevation8": "MuiPaper-elevation8",
                  "elevation9": "MuiPaper-elevation9",
                  "root": "MuiPaper-root",
                  "rounded": "MuiPaper-rounded",
                }
              }
            >
              <div
                className="MuiPaper-root MuiPaper-elevation1 MuiPaper-rounded"
              >
                <withRouter(NavigationBar)
                  routesList={
                    Array [
                      Object {
                        "authRequired": false,
                        "component": [Function],
                        "exact": true,
                        "name": "Sign Up",
                        "path": "/signup",
                      },
                      Object {
                        "authRequired": false,
                        "component": [Function],
                        "exact": true,
                        "name": "Log In",
                        "path": "/login",
                      },
                      Object {
                        "authRequired": true,
                        "component": [Function],
                        "exact": true,
                        "name": "Dashboard",
                        "path": "/dashboard",
                      },
                    ]
                  }
                >
                  <NavigationBar
                    history={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      }
                    }
                    routesList={
                      Array [
                        Object {
                          "authRequired": false,
                          "component": [Function],
                          "exact": true,
                          "name": "Sign Up",
                          "path": "/signup",
                        },
                        Object {
                          "authRequired": false,
                          "component": [Function],
                          "exact": true,
                          "name": "Log In",
                          "path": "/login",
                        },
                        Object {
                          "authRequired": true,
                          "component": [Function],
                          "exact": true,
                          "name": "Dashboard",
                          "path": "/dashboard",
                        },
                      ]
                    }
                  >
                    <ForwardRef(MenuList)>
                      <WithStyles(ForwardRef(List))
                        onKeyDown={[Function]}
                        role="menu"
                        tabIndex={-1}
                      >
                        <ForwardRef(List)
                          classes={
                            Object {
                              "dense": "MuiList-dense",
                              "padding": "MuiList-padding",
                              "root": "MuiList-root",
                              "subheader": "MuiList-subheader",
                            }
                          }
                          onKeyDown={[Function]}
                          role="menu"
                          tabIndex={-1}
                        >
                          <ul
                            className="MuiList-root MuiList-padding"
                            onKeyDown={[Function]}
                            role="menu"
                            tabIndex={-1}
                          >
                            <WithStyles(ForwardRef(MenuItem))
                              component={[Function]}
                              key="0"
                              selected={false}
                              to="/signup"
                            >
                              <ForwardRef(MenuItem)
                                classes={
                                  Object {
                                    "gutters": "MuiMenuItem-gutters",
                                    "root": "MuiMenuItem-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                component={[Function]}
                                selected={false}
                                to="/signup"
                              >
                                <WithStyles(ForwardRef(ListItem))
                                  button={true}
                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                  component={[Function]}
                                  disableGutters={false}
                                  role="menuitem"
                                  selected={false}
                                  tabIndex={-1}
                                  to="/signup"
                                >
                                  <ForwardRef(ListItem)
                                    button={true}
                                    className="MuiMenuItem-root MuiMenuItem-gutters"
                                    classes={
                                      Object {
                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                        "button": "MuiListItem-button",
                                        "container": "MuiListItem-container",
                                        "dense": "MuiListItem-dense",
                                        "disabled": "Mui-disabled",
                                        "divider": "MuiListItem-divider",
                                        "focusVisible": "Mui-focusVisible",
                                        "gutters": "MuiListItem-gutters",
                                        "root": "MuiListItem-root",
                                        "secondaryAction": "MuiListItem-secondaryAction",
                                        "selected": "Mui-selected",
                                      }
                                    }
                                    component={[Function]}
                                    disableGutters={false}
                                    role="menuitem"
                                    selected={false}
                                    tabIndex={-1}
                                    to="/signup"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                      component={[Function]}
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      role="menuitem"
                                      tabIndex={-1}
                                      to="/signup"
                                    >
                                      <ForwardRef(ButtonBase)
                                        className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component={[Function]}
                                        disabled={false}
                                        focusVisibleClassName="Mui-focusVisible"
                                        role="menuitem"
                                        tabIndex={-1}
                                        to="/signup"
                                      >
                                        <Link
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="menuitem"
                                          tabIndex={-1}
                                          to="/signup"
                                        >
                                          <a
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                            href="/signup"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="menuitem"
                                            tabIndex={-1}
                                          >
                                            Sign Up
                                            <br
                                              key=".1"
                                            />
                                            <NoSsr>
                                              <WithStyles(TouchRipple)
                                                center={false}
                                              >
                                                <TouchRipple
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      enter={true}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </a>
                                        </Link>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(ListItem)>
                                </WithStyles(ForwardRef(ListItem))>
                              </ForwardRef(MenuItem)>
                            </WithStyles(ForwardRef(MenuItem))>
                            <WithStyles(ForwardRef(MenuItem))
                              component={[Function]}
                              key="1"
                              selected={false}
                              to="/login"
                            >
                              <ForwardRef(MenuItem)
                                classes={
                                  Object {
                                    "gutters": "MuiMenuItem-gutters",
                                    "root": "MuiMenuItem-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                component={[Function]}
                                selected={false}
                                to="/login"
                              >
                                <WithStyles(ForwardRef(ListItem))
                                  button={true}
                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                  component={[Function]}
                                  disableGutters={false}
                                  role="menuitem"
                                  selected={false}
                                  tabIndex={-1}
                                  to="/login"
                                >
                                  <ForwardRef(ListItem)
                                    button={true}
                                    className="MuiMenuItem-root MuiMenuItem-gutters"
                                    classes={
                                      Object {
                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                        "button": "MuiListItem-button",
                                        "container": "MuiListItem-container",
                                        "dense": "MuiListItem-dense",
                                        "disabled": "Mui-disabled",
                                        "divider": "MuiListItem-divider",
                                        "focusVisible": "Mui-focusVisible",
                                        "gutters": "MuiListItem-gutters",
                                        "root": "MuiListItem-root",
                                        "secondaryAction": "MuiListItem-secondaryAction",
                                        "selected": "Mui-selected",
                                      }
                                    }
                                    component={[Function]}
                                    disableGutters={false}
                                    role="menuitem"
                                    selected={false}
                                    tabIndex={-1}
                                    to="/login"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                      component={[Function]}
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      role="menuitem"
                                      tabIndex={-1}
                                      to="/login"
                                    >
                                      <ForwardRef(ButtonBase)
                                        className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component={[Function]}
                                        disabled={false}
                                        focusVisibleClassName="Mui-focusVisible"
                                        role="menuitem"
                                        tabIndex={-1}
                                        to="/login"
                                      >
                                        <Link
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="menuitem"
                                          tabIndex={-1}
                                          to="/login"
                                        >
                                          <a
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                            href="/login"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="menuitem"
                                            tabIndex={-1}
                                          >
                                            Log In
                                            <br
                                              key=".1"
                                            />
                                            <NoSsr>
                                              <WithStyles(TouchRipple)
                                                center={false}
                                              >
                                                <TouchRipple
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      enter={true}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </a>
                                        </Link>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(ListItem)>
                                </WithStyles(ForwardRef(ListItem))>
                              </ForwardRef(MenuItem)>
                            </WithStyles(ForwardRef(MenuItem))>
                            <WithStyles(ForwardRef(MenuItem))
                              component={[Function]}
                              key="2"
                              selected={false}
                              to="/dashboard"
                            >
                              <ForwardRef(MenuItem)
                                classes={
                                  Object {
                                    "gutters": "MuiMenuItem-gutters",
                                    "root": "MuiMenuItem-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                component={[Function]}
                                selected={false}
                                to="/dashboard"
                              >
                                <WithStyles(ForwardRef(ListItem))
                                  button={true}
                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                  component={[Function]}
                                  disableGutters={false}
                                  role="menuitem"
                                  selected={false}
                                  tabIndex={-1}
                                  to="/dashboard"
                                >
                                  <ForwardRef(ListItem)
                                    button={true}
                                    className="MuiMenuItem-root MuiMenuItem-gutters"
                                    classes={
                                      Object {
                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                        "button": "MuiListItem-button",
                                        "container": "MuiListItem-container",
                                        "dense": "MuiListItem-dense",
                                        "disabled": "Mui-disabled",
                                        "divider": "MuiListItem-divider",
                                        "focusVisible": "Mui-focusVisible",
                                        "gutters": "MuiListItem-gutters",
                                        "root": "MuiListItem-root",
                                        "secondaryAction": "MuiListItem-secondaryAction",
                                        "selected": "Mui-selected",
                                      }
                                    }
                                    component={[Function]}
                                    disableGutters={false}
                                    role="menuitem"
                                    selected={false}
                                    tabIndex={-1}
                                    to="/dashboard"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                      component={[Function]}
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      role="menuitem"
                                      tabIndex={-1}
                                      to="/dashboard"
                                    >
                                      <ForwardRef(ButtonBase)
                                        className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component={[Function]}
                                        disabled={false}
                                        focusVisibleClassName="Mui-focusVisible"
                                        role="menuitem"
                                        tabIndex={-1}
                                        to="/dashboard"
                                      >
                                        <Link
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="menuitem"
                                          tabIndex={-1}
                                          to="/dashboard"
                                        >
                                          <a
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                            href="/dashboard"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="menuitem"
                                            tabIndex={-1}
                                          >
                                            Dashboard
                                            <br
                                              key=".1"
                                            />
                                            <NoSsr />
                                          </a>
                                        </Link>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(ListItem)>
                                </WithStyles(ForwardRef(ListItem))>
                              </ForwardRef(MenuItem)>
                            </WithStyles(ForwardRef(MenuItem))>
                          </ul>
                        </ForwardRef(List)>
                      </WithStyles(ForwardRef(List))>
                    </ForwardRef(MenuList)>
                  </NavigationBar>
                </withRouter(NavigationBar)>
                <button
                  id="signOut"
                  onClick={[Function]}
                >
                  Log Out
                </button>
              </div>
            </ForwardRef(Paper)>
          </WithStyles(ForwardRef(Paper))>
        </div>
        <div>
          <Route
            component={[Function]}
            exact={true}
            key="0"
            path="/signup"
          />
          <Route
            component={[Function]}
            exact={true}
            key="1"
            path="/login"
          />
          <Route
            component={[Function]}
            exact={true}
            key="2"
            path="/dashboard"
          />
          <Route
            component={[Function]}
            exact={true}
            key="3"
            path="/email"
          />
        </div>
      </Router>
    </BrowserRouter>
  </div>
</Navigation>
`;

exports[`Only non auth required links render when not logged in 1`] = `
<Navigation
  api={
    Object {
      "auth": Object {
        "currentUser": [MockFunction],
        "onAuthStateChanged": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "signOut": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
    }
  }
  classes={[Function]}
>
  <div>
    <BrowserRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <div>
          <WithStyles(ForwardRef(Paper))>
            <ForwardRef(Paper)
              classes={
                Object {
                  "elevation0": "MuiPaper-elevation0",
                  "elevation1": "MuiPaper-elevation1",
                  "elevation10": "MuiPaper-elevation10",
                  "elevation11": "MuiPaper-elevation11",
                  "elevation12": "MuiPaper-elevation12",
                  "elevation13": "MuiPaper-elevation13",
                  "elevation14": "MuiPaper-elevation14",
                  "elevation15": "MuiPaper-elevation15",
                  "elevation16": "MuiPaper-elevation16",
                  "elevation17": "MuiPaper-elevation17",
                  "elevation18": "MuiPaper-elevation18",
                  "elevation19": "MuiPaper-elevation19",
                  "elevation2": "MuiPaper-elevation2",
                  "elevation20": "MuiPaper-elevation20",
                  "elevation21": "MuiPaper-elevation21",
                  "elevation22": "MuiPaper-elevation22",
                  "elevation23": "MuiPaper-elevation23",
                  "elevation24": "MuiPaper-elevation24",
                  "elevation3": "MuiPaper-elevation3",
                  "elevation4": "MuiPaper-elevation4",
                  "elevation5": "MuiPaper-elevation5",
                  "elevation6": "MuiPaper-elevation6",
                  "elevation7": "MuiPaper-elevation7",
                  "elevation8": "MuiPaper-elevation8",
                  "elevation9": "MuiPaper-elevation9",
                  "root": "MuiPaper-root",
                  "rounded": "MuiPaper-rounded",
                }
              }
            >
              <div
                className="MuiPaper-root MuiPaper-elevation1 MuiPaper-rounded"
              >
                <withRouter(NavigationBar)
                  routesList={
                    Array [
                      Object {
                        "authRequired": false,
                        "component": [Function],
                        "exact": true,
                        "name": "Sign Up",
                        "path": "/signup",
                      },
                      Object {
                        "authRequired": false,
                        "component": [Function],
                        "exact": true,
                        "name": "Log In",
                        "path": "/login",
                      },
                    ]
                  }
                >
                  <NavigationBar
                    history={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      }
                    }
                    routesList={
                      Array [
                        Object {
                          "authRequired": false,
                          "component": [Function],
                          "exact": true,
                          "name": "Sign Up",
                          "path": "/signup",
                        },
                        Object {
                          "authRequired": false,
                          "component": [Function],
                          "exact": true,
                          "name": "Log In",
                          "path": "/login",
                        },
                      ]
                    }
                  >
                    <ForwardRef(MenuList)>
                      <WithStyles(ForwardRef(List))
                        onKeyDown={[Function]}
                        role="menu"
                        tabIndex={-1}
                      >
                        <ForwardRef(List)
                          classes={
                            Object {
                              "dense": "MuiList-dense",
                              "padding": "MuiList-padding",
                              "root": "MuiList-root",
                              "subheader": "MuiList-subheader",
                            }
                          }
                          onKeyDown={[Function]}
                          role="menu"
                          tabIndex={-1}
                        >
                          <ul
                            className="MuiList-root MuiList-padding"
                            onKeyDown={[Function]}
                            role="menu"
                            tabIndex={-1}
                          >
                            <WithStyles(ForwardRef(MenuItem))
                              component={[Function]}
                              key="0"
                              selected={false}
                              to="/signup"
                            >
                              <ForwardRef(MenuItem)
                                classes={
                                  Object {
                                    "gutters": "MuiMenuItem-gutters",
                                    "root": "MuiMenuItem-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                component={[Function]}
                                selected={false}
                                to="/signup"
                              >
                                <WithStyles(ForwardRef(ListItem))
                                  button={true}
                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                  component={[Function]}
                                  disableGutters={false}
                                  role="menuitem"
                                  selected={false}
                                  tabIndex={-1}
                                  to="/signup"
                                >
                                  <ForwardRef(ListItem)
                                    button={true}
                                    className="MuiMenuItem-root MuiMenuItem-gutters"
                                    classes={
                                      Object {
                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                        "button": "MuiListItem-button",
                                        "container": "MuiListItem-container",
                                        "dense": "MuiListItem-dense",
                                        "disabled": "Mui-disabled",
                                        "divider": "MuiListItem-divider",
                                        "focusVisible": "Mui-focusVisible",
                                        "gutters": "MuiListItem-gutters",
                                        "root": "MuiListItem-root",
                                        "secondaryAction": "MuiListItem-secondaryAction",
                                        "selected": "Mui-selected",
                                      }
                                    }
                                    component={[Function]}
                                    disableGutters={false}
                                    role="menuitem"
                                    selected={false}
                                    tabIndex={-1}
                                    to="/signup"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                      component={[Function]}
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      role="menuitem"
                                      tabIndex={-1}
                                      to="/signup"
                                    >
                                      <ForwardRef(ButtonBase)
                                        className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component={[Function]}
                                        disabled={false}
                                        focusVisibleClassName="Mui-focusVisible"
                                        role="menuitem"
                                        tabIndex={-1}
                                        to="/signup"
                                      >
                                        <Link
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="menuitem"
                                          tabIndex={-1}
                                          to="/signup"
                                        >
                                          <a
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                            href="/signup"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="menuitem"
                                            tabIndex={-1}
                                          >
                                            Sign Up
                                            <br
                                              key=".1"
                                            />
                                            <NoSsr>
                                              <WithStyles(TouchRipple)
                                                center={false}
                                              >
                                                <TouchRipple
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      enter={true}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </a>
                                        </Link>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(ListItem)>
                                </WithStyles(ForwardRef(ListItem))>
                              </ForwardRef(MenuItem)>
                            </WithStyles(ForwardRef(MenuItem))>
                            <WithStyles(ForwardRef(MenuItem))
                              component={[Function]}
                              key="1"
                              selected={false}
                              to="/login"
                            >
                              <ForwardRef(MenuItem)
                                classes={
                                  Object {
                                    "gutters": "MuiMenuItem-gutters",
                                    "root": "MuiMenuItem-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                component={[Function]}
                                selected={false}
                                to="/login"
                              >
                                <WithStyles(ForwardRef(ListItem))
                                  button={true}
                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                  component={[Function]}
                                  disableGutters={false}
                                  role="menuitem"
                                  selected={false}
                                  tabIndex={-1}
                                  to="/login"
                                >
                                  <ForwardRef(ListItem)
                                    button={true}
                                    className="MuiMenuItem-root MuiMenuItem-gutters"
                                    classes={
                                      Object {
                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                        "button": "MuiListItem-button",
                                        "container": "MuiListItem-container",
                                        "dense": "MuiListItem-dense",
                                        "disabled": "Mui-disabled",
                                        "divider": "MuiListItem-divider",
                                        "focusVisible": "Mui-focusVisible",
                                        "gutters": "MuiListItem-gutters",
                                        "root": "MuiListItem-root",
                                        "secondaryAction": "MuiListItem-secondaryAction",
                                        "selected": "Mui-selected",
                                      }
                                    }
                                    component={[Function]}
                                    disableGutters={false}
                                    role="menuitem"
                                    selected={false}
                                    tabIndex={-1}
                                    to="/login"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                      component={[Function]}
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      role="menuitem"
                                      tabIndex={-1}
                                      to="/login"
                                    >
                                      <ForwardRef(ButtonBase)
                                        className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component={[Function]}
                                        disabled={false}
                                        focusVisibleClassName="Mui-focusVisible"
                                        role="menuitem"
                                        tabIndex={-1}
                                        to="/login"
                                      >
                                        <Link
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="menuitem"
                                          tabIndex={-1}
                                          to="/login"
                                        >
                                          <a
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                            href="/login"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="menuitem"
                                            tabIndex={-1}
                                          >
                                            Log In
                                            <br
                                              key=".1"
                                            />
                                            <NoSsr>
                                              <WithStyles(TouchRipple)
                                                center={false}
                                              >
                                                <TouchRipple
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      enter={true}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </a>
                                        </Link>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(ListItem)>
                                </WithStyles(ForwardRef(ListItem))>
                              </ForwardRef(MenuItem)>
                            </WithStyles(ForwardRef(MenuItem))>
                          </ul>
                        </ForwardRef(List)>
                      </WithStyles(ForwardRef(List))>
                    </ForwardRef(MenuList)>
                  </NavigationBar>
                </withRouter(NavigationBar)>
              </div>
            </ForwardRef(Paper)>
          </WithStyles(ForwardRef(Paper))>
        </div>
        <div>
          <Route
            component={[Function]}
            exact={true}
            key="0"
            path="/signup"
          />
          <Route
            component={[Function]}
            exact={true}
            key="1"
            path="/login"
          />
          <Route
            component={[Function]}
            exact={true}
            key="2"
            path="/dashboard"
          />
          <Route
            component={[Function]}
            exact={true}
            key="3"
            path="/email"
          />
        </div>
      </Router>
    </BrowserRouter>
  </div>
</Navigation>
`;

exports[`Render the navigation authed 1`] = `
<div>
  <BrowserRouter>
    <div>
      <WithStyles(ForwardRef(Paper))>
        <withRouter(NavigationBar)
          routesList={
            Array [
              Object {
                "authRequired": false,
                "component": [Function],
                "exact": true,
                "name": "Sign Up",
                "path": "/signup",
              },
              Object {
                "authRequired": false,
                "component": [Function],
                "exact": true,
                "name": "Log In",
                "path": "/login",
              },
              Object {
                "authRequired": true,
                "component": [Function],
                "exact": true,
                "name": "Dashboard",
                "path": "/dashboard",
              },
            ]
          }
        />
        <button
          id="signOut"
          onClick={[Function]}
        >
          Log Out
        </button>
      </WithStyles(ForwardRef(Paper))>
    </div>
    <div>
      <Route
        component={[Function]}
        exact={true}
        key="0"
        path="/signup"
      />
      <Route
        component={[Function]}
        exact={true}
        key="1"
        path="/login"
      />
      <Route
        component={[Function]}
        exact={true}
        key="2"
        path="/dashboard"
      />
      <Route
        component={[Function]}
        exact={true}
        key="3"
        path="/email"
      />
    </div>
  </BrowserRouter>
</div>
`;

exports[`Render the navigation unauthed 1`] = `
<div>
  <BrowserRouter>
    <div>
      <WithStyles(ForwardRef(Paper))>
        <withRouter(NavigationBar)
          routesList={
            Array [
              Object {
                "authRequired": false,
                "component": [Function],
                "exact": true,
                "name": "Sign Up",
                "path": "/signup",
              },
              Object {
                "authRequired": false,
                "component": [Function],
                "exact": true,
                "name": "Log In",
                "path": "/login",
              },
            ]
          }
        />
      </WithStyles(ForwardRef(Paper))>
    </div>
    <div>
      <Route
        component={[Function]}
        exact={true}
        key="0"
        path="/signup"
      />
      <Route
        component={[Function]}
        exact={true}
        key="1"
        path="/login"
      />
      <Route
        component={[Function]}
        exact={true}
        key="2"
        path="/dashboard"
      />
      <Route
        component={[Function]}
        exact={true}
        key="3"
        path="/email"
      />
    </div>
  </BrowserRouter>
</div>
`;
